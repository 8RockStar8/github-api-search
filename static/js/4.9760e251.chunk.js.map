{"version":3,"sources":["pages/user/component.js","pages/user/index.js","components/image/component.js","components/image/index.js"],"names":["User","useState","user","setUser","userOrgs","setUserOrgs","userRepos","setUserRepos","userItem","useSelector","state","orgItems","orgs","repoItems","repos","dispatch","useDispatch","useEffect","_","getUserOrgsReq","login","getUserReposReq","className","src","avatar_url","alt","name","location","followers","following","length","map","item","index","to","pathname","html_url","target","width","height","timeout","color","type","style","position","left","top","Image"],"mappings":"8NAiHeA,EAtGF,WAAO,IAAD,EACSC,mBAAS,MADlB,mBACTC,EADS,KACHC,EADG,OAEiBF,mBAAS,IAF1B,mBAETG,EAFS,KAECC,EAFD,OAGmBJ,mBAAS,IAH5B,mBAGTK,EAHS,KAGEC,EAHF,KAKTC,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMR,QAAxCM,SACAG,EAAaF,aAAY,SAAAC,GAAK,OAAIA,EAAME,QAAxCD,SACAE,EAAcJ,aAAY,SAAAC,GAAK,OAAIA,EAAMI,SAAzCD,UAEFE,EAAWC,cAiCjB,OA/BAC,qBAAU,SAAAC,GAKRf,EAJiB,OAAbK,EAII,KAHEA,KAIT,CAACA,IAEJS,qBAAU,SAAAC,GACK,OAAThB,IACFa,EAASI,YAAeX,EAASY,QACjCL,EAASM,YAAgBb,EAASY,WAEnC,CAAClB,IAEJe,qBAAU,SAAAC,GAKRX,EAJkB,OAAdM,EAIS,GAHEA,KAId,CAACA,IAEJI,qBAAU,SAAAC,GAKRb,EAJiB,OAAbM,EAIQ,GAHEA,KAIb,CAACA,IAEGT,EAAO,sBAAKoB,UAAU,aAAf,UACZ,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,cAAC,IAAD,CAAOC,IAAKrB,EAAKsB,WAAYC,IAAI,eAGrC,sBAAKH,UAAU,6BAAf,UACE,oBAAGA,UAAU,uBAAb,wBAAgDpB,EAAKwB,KAAOxB,EAAKwB,KAAO,UACxE,oBAAGJ,UAAU,uBAAb,sBAA8CpB,EAAKyB,SAAWzB,EAAKyB,SAAW,UAC9E,oBAAGL,UAAU,uBAAb,wBAAgDpB,EAAK0B,UAAY1B,EAAK0B,UAAY,UAClF,oBAAGN,UAAU,uBAAb,wBAAgDpB,EAAK2B,UAAY3B,EAAK2B,UAAY,gBAGtF,sBAAKP,UAAU,kBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,6CACA,oBAAIA,UAAU,OAAd,SACIhB,GAAaA,EAAUwB,OAAS,EAAKxB,EAAUyB,KAAI,SAACC,EAAMC,GACxD,OAAO,6BACL,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAUH,EAAKI,UAAYC,OAAO,SAA9C,SACGL,EAAKN,QAFH,gBAAkBO,OAKtB,cAAC,IAAD,CACHK,MAAO,GACPC,OAAQ,GACRC,SAAU,EACVC,MAAM,UACNC,KAAK,eACLC,MAAO,CAACC,SAAU,WAAYC,KAAM,MAAOC,IAAK,cAKxD,sBAAKxB,UAAU,iBAAf,UACE,8CACA,oBAAIA,UAAU,OAAd,SAEKlB,GAAYA,EAAS0B,OAAS,EAAK1B,EAAS2B,KAAI,SAACC,EAAMC,GACtD,OAAO,6BACL,cAAC,IAAD,CAAMC,GAAIF,EAAKI,SAAUC,OAAO,SAAhC,SACGL,EAAKN,QAFH,eAAiBO,OAKrB,cAAC,IAAD,CACHK,MAAO,GACPC,OAAQ,GACRC,SAAU,EACVC,MAAM,UACNC,KAAK,eACLC,MAAO,CAACC,SAAU,WAAYC,KAAM,MAAOC,IAAK,oBAMnD,cC7GI9C,a,2ECaA+C,EATD,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,IAAKE,EAAU,EAAVA,IACpB,OAAO,qBAAKF,IAAKA,EAAKE,IAAKA,KCLdsB,O","file":"static/js/4.9760e251.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport { Link } from 'react-router-dom';\n\nimport Image from 'components/image';\nimport { getUserOrgsReq, getUserReposReq } from 'app/actions';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './user.css';\n\nconst User = () => {\n  const [ user, setUser ] = useState(null);\n  const [ userOrgs, setUserOrgs ] = useState([]);\n  const [ userRepos, setUserRepos ] = useState([]);\n\n  const { userItem } = useSelector(state => state.user);\n  const { orgItems } = useSelector(state => state.orgs);\n  const { repoItems } = useSelector(state => state.repos);\n\n  const dispatch = useDispatch();\n\n  useEffect(_ => {\n    if (userItem !== null) {\n      setUser(userItem);\n      return;\n    }\n    setUser(null);\n  }, [userItem]);\n\n  useEffect(_ => {\n    if (user !== null) {\n      dispatch(getUserOrgsReq(userItem.login));\n      dispatch(getUserReposReq(userItem.login));\n    }\n  }, [user]);\n\n  useEffect(_ => {\n    if (repoItems !== null) {\n      setUserRepos(repoItems);\n      return;\n    }\n    setUserRepos([]);\n  }, [repoItems]);\n\n  useEffect(_ => {\n    if (orgItems !== null) {\n      setUserOrgs(orgItems);\n      return;\n    }\n    setUserOrgs([]);\n  }, [orgItems]);\n\n  return user ? <div className='user-inner'>\n    <div className='user-inner-page'>\n      <div className='user-inner-page-info-place'>\n        <div className='user-inner-page-img-place'>\n          <Image src={user.avatar_url} alt='avatar' />\n        </div>\n      </div>\n      <div className='user-inner-page-info-place'>\n        <p className='user-inner-info-text'>User name: {user.name ? user.name : '----'}</p>\n        <p className='user-inner-info-text'>Address: {user.location ? user.location : '----'}</p>\n        <p className='user-inner-info-text'>Followers: {user.followers ? user.followers : '----'}</p>\n        <p className='user-inner-info-text'>Following: {user.following ? user.following : '----'}</p>\n      </div>\n    </div>\n    <div className='user-inner-page'>\n      <div className='user-info-list'>\n        <p>Repositories</p>\n        <ul className='list'>\n          {(userRepos && userRepos.length > 0) ? userRepos.map((item, index) => {\n              return <li key={`repos_${index}`}>\n                <Link to={{ pathname: item.html_url }} target='_blank'>\n                  {item.name}\n                </Link>\n              </li>\n            }) : <Loader\n              width={45}\n              height={45}\n              timeout={-1}\n              color='#00BFFF'\n              type='BallTriangle'\n              style={{position: 'absolute', left: '50%', top: '50%'}}\n            />\n          }\n        </ul>\n      </div>\n      <div className='user-info-list'>\n        <p>Organizations</p>\n        <ul className='list'>\n          {\n            (userOrgs && userOrgs.length > 0) ? userOrgs.map((item, index) => {\n              return <li key={`orgs_${index}`}>\n                <Link to={item.html_url} target='_blank'>\n                  {item.name}\n                </Link>\n              </li>\n            }) : <Loader\n              width={45}\n              height={45}\n              timeout={-1}\n              color='#00BFFF'\n              type='BallTriangle'\n              style={{position: 'absolute', left: '50%', top: '50%'}}\n            />\n          }\n        </ul>\n      </div>\n    </div>\n  </div> : 'No Info...'\n}\n\nexport default User;\n","import User from './component';\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './image.css';\n\nconst Image = ({ src, alt }) => {\n  return <img src={src} alt={alt} />;\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default Image;\n","import Image from './component';\nexport default Image;\n"],"sourceRoot":""}